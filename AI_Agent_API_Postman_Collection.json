{
	"info": {
		"_postman_id": "ai-agent-api-collection",
		"name": "AI Agent API - Executive Assistant Automation",
		"description": "Complete API documentation for the AI Agent Executive Assistant automation service. This API provides endpoints for scheduling meetings, sending emails, and processing natural language commands using Google Calendar, SendGrid, and Gemini AI integration.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "ai-agent-project"
	},
	"item": [
		{
			"name": "Health & Status",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Returns the health status of the AI Agent service. This endpoint is useful for monitoring and checking if the service is running properly."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/health",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"healthy\",\n  \"service\": \"ai-agent\",\n  \"version\": \"1.0.0\"\n}"
						}
					]
				},
				{
					"name": "Service Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"status"
							]
						},
						"description": "Returns detailed service status including all available endpoints. This is useful for discovering the API capabilities."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/status",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"running\",\n  \"service\": \"ai-agent\",\n  \"endpoints\": [\n    \"GET /health\",\n    \"POST /schedule\",\n    \"POST /email\",\n    \"POST /nlp\",\n    \"GET /status\"\n  ]\n}"
						}
					]
				}
			],
			"description": "Health and status monitoring endpoints for the AI Agent service."
		},
		{
			"name": "Meeting Scheduling",
			"item": [
				{
					"name": "Schedule Meeting",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"task\": \"Schedule a meeting with john@example.com tomorrow at 2 PM about project review\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/schedule",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"schedule"
							]
						},
						"description": "Schedules a meeting using natural language processing. The AI agent will parse the task description, extract meeting details (attendees, time, topic), and create a calendar event using Google Calendar API.\n\n**Features:**\n- Natural language parsing for meeting details\n- Automatic attendee extraction from email addresses\n- Time parsing (tomorrow, next week, specific dates)\n- Topic extraction for meeting description\n- Conflict detection and resolution\n- Automatic calendar integration"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"task\": \"Schedule a meeting with john@example.com tomorrow at 2 PM about project review\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/schedule",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"success\",\n  \"message\": \"Task processed successfully\",\n  \"task\": \"Schedule a meeting with john@example.com tomorrow at 2 PM about project review\"\n}"
						},
						{
							"name": "Bad Request - Missing Task",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"task\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/schedule",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": "Task is required"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"task\": \"Schedule meeting with invalid@email\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/schedule",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": "Failed to process task: calendar service error"
						}
					]
				}
			],
			"description": "Meeting scheduling endpoints that use natural language processing to create calendar events."
		},
		{
			"name": "Email Automation",
			"item": [
				{
					"name": "Send Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"task\": \"Send email to client@example.com saying thank you for the meeting and we'll follow up next week\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/email",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"email"
							]
						},
						"description": "Sends emails using natural language processing. The AI agent will parse the task description, extract recipient and content information, and send the email using SendGrid API.\n\n**Features:**\n- Natural language parsing for email content\n- Automatic recipient extraction from email addresses\n- Content generation based on context\n- Professional email formatting\n- SendGrid integration for reliable delivery\n- Follow-up email automation"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"task\": \"Send email to client@example.com saying thank you for the meeting and we'll follow up next week\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/email",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"success\",\n  \"message\": \"Email task processed successfully\",\n  \"task\": \"Send email to client@example.com saying thank you for the meeting and we'll follow up next week\"\n}"
						},
						{
							"name": "Bad Request - Missing Task",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"task\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/email",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"email"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": "Task is required"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"task\": \"Send email to invalid@email\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/email",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"email"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": "Failed to process email task: email service error"
						}
					]
				}
			],
			"description": "Email automation endpoints that use natural language processing to send emails."
		},
		{
			"name": "Natural Language Processing",
			"item": [
				{
					"name": "Process NLP Command",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"command\": \"What meetings do I have today?\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/nlp",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"nlp"
							]
						},
						"description": "Processes natural language commands using Google Gemini AI. This endpoint can handle various types of queries and commands related to calendar, email, and general assistant tasks.\n\n**Capabilities:**\n- Calendar queries (meetings, availability, schedule)\n- Email management (drafts, sent emails, follow-ups)\n- Task management and reminders\n- General assistant queries\n- Context-aware responses\n- Multi-turn conversations"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"command\": \"What meetings do I have today?\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/nlp",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"nlp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"success\",\n  \"response\": \"I'll check your calendar for today's meetings. You have 2 meetings scheduled: 1) Team Standup at 10:00 AM, 2) Client Review at 2:00 PM.\",\n  \"command\": \"What meetings do I have today?\"\n}"
						},
						{
							"name": "Bad Request - Missing Command",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"command\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/nlp",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"nlp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": "Command is required"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"command\": \"Complex query that fails\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/nlp",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"nlp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": "Failed to process NLP command: AI service error"
						}
					]
				}
			],
			"description": "Natural language processing endpoints that use Google Gemini AI to understand and respond to user commands."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}
